services:
  ms-api-gateway:
    image: nginx:latest
    container_name: ms-api-gateway
    ports:
      - 8080:80
    volumes:
      - ./config/nginx:/etc/nginx/conf.d/
    depends_on:
      ms-get:
        condition: service_healthy
  ms-get:
    build:
      context: ./get
    container_name: ms-get
    depends_on:
      ms-db:
        condition: service_healthy
    healthcheck:
      test: "curl -Is localhost:8080/keyboards | head -n 1 | grep 200 || exit 1"
      interval: 20s
      timeout: 5s
      retries: 5
      start_period: 20s
    environment:
      - POSTGRES_URL=jdbc:postgresql://ms-db:5432/kezboard
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
  ms-put:
    build:
      context: ./put
    container_name: ms-put
    depends_on:
      ms-db:
        condition: service_healthy
    environment:
      - POSTGRES_URL=jdbc:postgresql://ms-db:5432/kezboard
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
  ms-post:
    build:
      context: ./post
    container_name: ms-post
    depends_on:
      ms-db:
        condition: service_healthy
    environment:
      - POSTGRES_URL=jdbc:postgresql://ms-db:5432/kezboard
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
  ms-delete:
    build:
      context: ./delete
    container_name: ms-delete
    depends_on:
      ms-db:
        condition: service_healthy
    environment:
      - POSTGRES_URL=jdbc:postgresql://ms-db:5432/kezboard
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
  ms-db:
    image: postgres
    container_name: ms-db
    restart: always
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "kezboard" ]
      interval: 10s
      timeout: 5s
      retries: 5
volumes:
  db-data: