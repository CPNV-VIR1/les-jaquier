services:
  nginx:
    image: nginx:latest
    container_name: nginx-proxy
    ports:
      - 80:80
    volumes:
      - ./config/nginx:/etc/nginx/conf.d/
    depends_on:
      get-api-server:
        condition: service_healthy
  get-api-server:
    build:
      context: ./get
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: "curl -Is localhost:8080/keyboards | head -n 1 | grep 200 || exit 1"
      interval: 20s
      timeout: 5s
      retries: 5
      start_period: 20s
    environment:
      - POSTGRES_URL=jdbc:postgresql://db:5432/kezboard
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
  put-api-server:
    build:
      context: ./put
    depends_on:
      db:
        condition: service_healthy
    environment:
      - POSTGRES_URL=jdbc:postgresql://db:5432/kezboard
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
  post-api-server:
    build:
      context: ./post
    depends_on:
      db:
        condition: service_healthy
    environment:
      - POSTGRES_URL=jdbc:postgresql://db:5432/kezboard
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
  delete-api-server:
    build:
      context: ./delete
    depends_on:
      db:
        condition: service_healthy
    environment:
      - POSTGRES_URL=jdbc:postgresql://db:5432/kezboard
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
  db:
    image: postgres
    restart: always
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "kezboard" ]
      interval: 10s
      timeout: 5s
      retries: 5
volumes:
  db-data: